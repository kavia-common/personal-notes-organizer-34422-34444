{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service called NotesService that manages a collection of notes including creating, updating, deleting, and persisting notes to localStorage. It also provides methods to select and retrieve notes by ID.", "external_files": ["../models/note.model"], "external_methods": ["isPlatformBrowser"], "published": ["NotesService"], "classes": [{"name": "NotesService", "description": "An Angular service for managing note objects, with functionalities for CRUD operations and local storage persistence."}], "methods": [{"name": "load", "description": "Loads notes from local storage, returning an array of Note objects sorted by updatedAt descending."}, {"name": "persist", "description": "Persists the current notes array to local storage."}, {"name": "generateId", "description": "Generates a unique ID for new notes, using crypto if available or falling back to a random string."}, {"name": "createNote", "description": "Creates a new note with default title and empty content, adds it to the notes list, and persists data."}, {"name": "updateNote", "description": "Updates fields of an existing note identified by ID, then sorts and persists the list."}, {"name": "deleteNote", "description": "Deletes a note by ID, updates the notes list, persists data, and manages selected note state."}, {"name": "getNoteById", "description": "Retrieves a note by its ID, or returns null if not found."}, {"name": "select", "description": "Sets the currently selected note ID."}], "calls": ["this.load", "this.persist", "globalThis.localStorage.getItem", "globalThis.localStorage.setItem", "this.notesSignal.update", "this.selectedId()"], "search-terms": ["NotesService", "localStorage", "createNote", "updateNote", "deleteNote", "select", "Note"], "state": 2, "file_id": 22, "knowledge_revision": 84, "git_revision": "", "revision_history": [{"45": ""}, {"80": ""}, {"84": ""}], "ctags": [{"_type": "tag", "name": "NotesService", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-34422-34444/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^export class NotesService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "STORAGE_KEY", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-34422-34444/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^const STORAGE_KEY = 'notes_app_data_v1';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "after", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-34422-34444/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const after = this.notesSignal().length;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "before", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-34422-34444/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const before = this.notesSignal().length;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "g", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-34422-34444/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const g: any = (typeof globalThis !== 'undefined') ? (globalThis as any) : undefined;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-34422-34444/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const id = this.selectedId();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "newNote", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-34422-34444/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const newNote: Note = {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "next", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-34422-34444/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const next = list.map((n) =>$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-34422-34444/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^    const now = Date.now();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "parsed", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-34422-34444/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const parsed = JSON.parse(raw) as Note[];$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "platformId", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-34422-34444/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^  private platformId = inject(PLATFORM_ID);$/", "language": "TypeScript", "kind": "property", "scope": "NotesService", "scopeKind": "class"}, {"_type": "tag", "name": "raw", "path": "/home/kavia/workspace/code-generation/personal-notes-organizer-34422-34444/notes_frontend/src/app/services/notes.service.ts", "pattern": "/^      const raw = (typeof globalThis !== 'undefined' && typeof (globalThis as any).localStorage /", "language": "TypeScript", "kind": "constant"}], "hash": "fb8c5defb2d42189a83cc5be0b800309", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/services/notes.service.ts", "fields": [{"name": "private platformId = inject(PLATFORM_ID);", "scope": "NotesService", "scopeKind": "class", "description": "unavailable"}]}